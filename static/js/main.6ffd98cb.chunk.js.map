{"version":3,"sources":["authConfig.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","components/ProfileData.jsx","graph.js","App.jsx","index.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","SignInButton","instance","useMsal","handleLogin","loginType","loginPopup","catch","e","log","loginRedirect","DropdownButton","variant","className","drop","title","Dropdown","Item","as","onClick","SignOutButton","handleLogout","logoutType","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","PageLayout","props","isAuthenticated","useIsAuthenticated","Navbar","bg","href","children","ProfileData","graphData","id","givenName","surname","userPrincipalName","accessToken","headers","Headers","bearer","append","options","method","fetch","then","response","json","ProfileContent","accounts","useState","setGraphData","name","Button","acquireTokenSilent","account","callMsGraph","MainContent","App","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ffd98cb.chunk.js","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n    auth: {\n        clientId: \"5ff2c05d-e6d6-4cf1-8392-89bcdb54a038\",\n        authority: \"https://login.microsoftonline.com/common\",\n        redirectUri: \"https://darevalo8.github.io/helppmsoauth/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\n        loggerOptions: {\n            loggerCallback: (level, message, containsPii) => {\n                if (containsPii) {\n                    return;\n                }\n                switch (level) {\n                    case LogLevel.Error:\n                        console.error(message);\n                        return;\n                    case LogLevel.Info:\n                        console.info(message);\n                        return;\n                    case LogLevel.Verbose:\n                        console.debug(message);\n                        return;\n                    case LogLevel.Warning:\n                        console.warn(message);\n                        return;\n                }\n            }\n        }\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"User.Read\", 'Mail.Send', 'Mail.ReadWrite', 'offline_access']\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogin = (loginType) => {\n        if (loginType === \"popup\") {\n            instance.loginPopup(loginRequest).catch(e => {\n                console.log(e);\n            });\n        } else if (loginType === \"redirect\") {\n            instance.loginRedirect(loginRequest).catch(e => {\n                console.log(e);\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"popup\")}>Sign in using Popup</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"redirect\")}>Sign in using Redirect</Dropdown.Item>\n        </DropdownButton>\n    )\n}","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a sign-out button\n */\nexport const SignOutButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogout = (logoutType) => {\n        if (logoutType === \"popup\") {\n            instance.logoutPopup({\n                postLogoutRedirectUri: \"/\",\n                mainWindowRedirectUri: \"/\"\n            });\n        } else if (logoutType === \"redirect\") {\n            instance.logoutRedirect({\n                postLogoutRedirectUri: \"/\",\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"popup\")}>Sign out using Popup</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"redirect\")}>Sign out using Redirect</Dropdown.Item>\n        </DropdownButton>\n    )\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\n\n/**\n * Renders the navbar component with a sign-in or sign-out button depending on whether or not a user is authenticated\n * @param props \n */\nexport const PageLayout = (props) => {\n    const isAuthenticated = useIsAuthenticated();\n\n    return (\n        <>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a className=\"navbar-brand\" href=\"/\">Microsoft Identity Platform</a>\n                { isAuthenticated ? <SignOutButton /> : <SignInButton /> }\n            </Navbar>\n            <h5><center>Welcome to the Microsoft Authentication Library For Javascript - React Quickstart</center></h5>\n            <br />\n            <br />\n            {props.children}\n        </>\n    );\n};\n","import React from \"react\";\n\n/**\n * Renders information about the user obtained from MS Graph\n * @param props \n */\nexport const ProfileData = (props) => {\n    console.log(props.graphData);\n\n    return (\n        <div id=\"profile-div\">\n            <p><strong>First Name: </strong> {props.graphData.givenName}</p>\n            <p><strong>Last Name: </strong> {props.graphData.surname}</p>\n            <p><strong>Email: </strong> {props.graphData.userPrincipalName}</p>\n            <p><strong>Id: </strong> {props.graphData.id}</p>\n        </div>\n    );\n};","import { graphConfig } from \"./authConfig\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n","import React, { useState } from \"react\";\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"./authConfig\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { ProfileData } from \"./components/ProfileData\";\nimport { callMsGraph } from \"./graph\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./styles/App.css\";\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\nconst ProfileContent = () => {\n    const { instance, accounts } = useMsal();\n    const [graphData, setGraphData] = useState(null);\n\n    function RequestProfileData() {\n        // Silently acquires an access token which is then attached to a request for MS Graph data\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraph(response.accessToken).then(response => setGraphData(response));\n        });\n    }\n\n    return (\n        <>\n            <h5 className=\"card-title\">Welcome {accounts[0].name}</h5>\n            {graphData ? \n                <ProfileData graphData={graphData} />\n                :\n                <Button variant=\"secondary\" onClick={RequestProfileData}>Request Profile Information</Button>\n            }\n        </>\n    );\n};\n\n/**\n * If a user is authenticated the ProfileContent component above is rendered. Otherwise a message indicating a user is not authenticated is rendered.\n */\nconst MainContent = () => {    \n    return (\n        <div className=\"App\">\n            <AuthenticatedTemplate>\n                <ProfileContent />\n            </AuthenticatedTemplate>\n\n            <UnauthenticatedTemplate>\n                <h5 className=\"card-title\">Please sign-in to see your profile information.</h5>\n            </UnauthenticatedTemplate>\n        </div>\n    );\n};\n\nexport default function App() {\n    return (\n        <PageLayout>\n            <MainContent />\n        </PageLayout>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n\n/**\n * Initialize a PublicClientApplication instance which is provided to the MsalProvider component\n * We recommend initializing this outside of your root component to ensure it is not re-initialized on re-renders\n */\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n/**\n * We recommend wrapping most or all of your components in the MsalProvider component. It's best to render the MsalProvider as close to the root as possible.\n */\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={msalInstance}>\n            <App />\n        </MsalProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}